attributes:
  services:
    app:
      image: = @('docker.repository') ~ ':' ~ @('docker.tagPrefix') ~ @('app.version')
      environment:
        LOG_LEVEL: debug
        APP_HOST: = @('hostname')
      resources:
        memory: 100Mi
    mysql:
      image: = 'mysql:' ~ @('services.mysql.version')
      version: 5.7
      environment:
        MYSQL_DATABASE: = @('database.name')
        MYSQL_USER: = @('database.user')
      environment_secrets:
        MYSQL_PASSWORD: = @('database.pass')
        MYSQL_ROOT_PASSWORD: = @('database.root_pass')
      resources:
        memory: 512Mi
    postgres:
      image: = 'postgres:' ~ @('services.postgres.version')
      version: 9.6
      environment:
        POSTGRES_DB: = @('database.name')
        POSTGRES_USER: = @('database.user')
        PGDATA: /var/lib/postgresql/data/pgdata
      environment_secrets:
        POSTGRES_PASSWORD: = @('database.pass')
      resources:
        memory: 512Mi

  pipeline:
    publish:
      enabled: no
    preview:
      services:
        console:
          enabled: false
          resources:
            memory: "1024Mi"
        mysql:
          resources:
            memory: "512Mi"
        postgres:
          resources:
            memory: "512Mi"
            
    base:
      resourcePrefix: ~
      hostname: = @('pipeline.base.namespace') ~ '.example.com'
      istio:
        gateways:
          - "istio-system/{{ .Release.Namespace }}-gateway"
      prometheus:
        podMonitoring: false
      services:
        app:
          environment:
            APP_HOST: = @('pipeline.base.hostname')
            LOG_LEVEL: info
          metricsEnabled: true
          metricsEndpoints:
            - port: = @('app.default_port.name')
    qa:
      enabled: no
      namespace: = @('workspace.name')
      hostname: = @('pipeline.qa.namespace') ~ '.' ~ @('domain')
      resourcePrefix: ~
      services:
        app:
          environment:
            APP_HOST: = @('pipeline.qa.hostname')
