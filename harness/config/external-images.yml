function('external_images', [services]): |
  #!php
  $upstreamImages = $producedImages = [];
  $excludeImages = ['scratch'];

  foreach ($services as $service) {
    if (count($service['upstream']) > 0) {
      $upstreamImages = array_merge($upstreamImages, $service['upstream']);
      if ($service['image']) {
        $producedImages[] = $service['image'];
      }
    } else if ($service['image']) {
      $upstreamImages[] = $service['image'];
    }
  }
  $externalImages = array_diff($upstreamImages, $producedImages, $excludeImages);

  # workspace commands don't allow non-string types
  = join(' ', $externalImages);


command('external-images config [--skip-exists]'):
  env:
    IMAGES: = external_images(docker_service_images())
    SKIP_EXISTS: "= input.option('skip-exists') ? 1 : 0"
  exec: |
    #!php
    $exclude = [];
    if ($env['SKIP_EXISTS']) {
      $exclude = explode("\n", shell_exec('docker images -a --format \'{{ print .Repository ":" .Tag }}\''));
    }
    $include = explode(' ', $env['IMAGES']);
    $compose = ['version' => '3', 'services' => []];
    foreach (array_diff($include, $exclude) as $image) {
      $compose['services'][str_replace(['/', ':'], '_', $image)] = ['image' => $image];
    }
    echo \Symfony\Component\Yaml\Yaml::dump($compose, 100, 2);

command('external-images pull'): |
  #!bash(workspace:/)|@
  CONF_ARGS=()
  if [ -n "${CI:-}" ] || [ -n "${BUILD_ID:-}" ]; then
    CONF_ARGS+=(--skip-exists)
  fi

  passthru "ws external-images config $(printf '%q ' "${CONF_ARGS[@]}") | docker-compose -f - pull"
