command('enable'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)
    source .my127ws/harness/scripts/enable.sh

command('disable'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)
    source .my127ws/harness/scripts/disable.sh

command('destroy'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)
    source .my127ws/harness/scripts/destroy.sh

command('networks external'):
  env:
    NETWORKS: = get_docker_external_networks()
  exec: |
    #!bash(workspace:/)
    for NETWORK in ${NETWORKS}; do
      if ! docker network inspect "${NETWORK}" 2>&1 >/dev/null; then
        passthru docker network create "${NETWORK}"
      fi
    done

command('build'): |
  #!bash(workspace:/)|@
  ws external-images pull
  passthru docker-compose build app

command('rebuild'): |
  #!php
  $ws->run('destroy');
  $ws->run('install');

command('go generate'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|@
    passthru docker-compose exec -T app go generate

command('go test'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|@
    passthru docker-compose exec -T app go test ./...

command('go vet'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|@
    passthru docker-compose exec -T app go vet ./...

command('go fmt check'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|@
    passthru test -z $(docker-compose exec -T app gofmt -l .)

command('go mod check'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|@
    passthru docker-compose exec -T app helper modules:check
