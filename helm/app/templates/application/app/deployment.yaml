{{- with .Values.docker.services.app }}
{{- if .enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Values.resourcePrefix }}app
  labels:
    {{- include "chart.labels" $ | nindent 4 }}
    app.kubernetes.io/component: app
    app.service: {{ $.Values.resourcePrefix }}app
spec:
  selector:
    matchLabels:
      app.service: {{ $.Values.resourcePrefix }}app
  template:
    metadata:
      labels:
        app.service: {{ $.Values.resourcePrefix }}app
    spec:
      enableServiceLinks: false
      containers:
      - name: app
        env:
        {{- range $key, $value := .environment }}
        - name: {{ $key | quote }}
          value: {{ $value | quote }}
        {{- end }}
        {{- if .environment_secrets }}
        envFrom:
          - secretRef:
              name: {{ $.Values.resourcePrefix }}app
        {{- end }}
        image: {{ .image | quote }}
        imagePullPolicy: Always
        ports:
        {{- include "container.ports" $ | indent 8 }}
        resources:
          limits:
            memory: {{ .resources.memory }}
          requests:
            memory: {{ .resources.memory }}
        {{- include "probes" $ | indent 8 }}
{{- if $.Values.docker.image_pull_config }}
      imagePullSecrets:
      - name: {{ $.Values.resourcePrefix }}image-pull-config
{{- end }}
      restartPolicy: Always
status: {}
{{- end }}
{{- end }}
